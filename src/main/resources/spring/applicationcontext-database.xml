<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!--加载配置文件-->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="fileEncoding" value="utf-8" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="order" value="1"/>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:db.properties</value>
			</list>
		</property>
	</bean>

	<!--配置数据源-->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driverClass}" />
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="10" />
		<!-- 连接池的最大值 -->
		<property name="maxActive" value="500" />
		<!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		<property name="minIdle" value="10" />
		<!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<property name="maxIdle" value="50" />
		<property name="maxWait" value="60000" />
		<!--超时时间（秒为单位）-->
		<property name="removeAbandonedTimeout" value="60" />
		<property name="removeAbandoned" value="true" />
		<!--是否在自动回收超时连接的时候打印连接的超时错误-->
		<property name="logAbandoned" value="false" />
		<!-- 配置sql心跳检测,生产环境一般不开 -->
		<property name="testOnBorrow" value="false" />
		<!--指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除-->
		<property name="testWhileIdle" value="true" />
		<!--指明是否在归还到池中前进行检验-->
		<property name="testOnReturn" value="false" />
		<!--验证连接是否可用，使用的SQL语句-->
		<property name="validationQuery" value="SELECT 1 from dual" />
		<!--最长等待时间-->
		<property name="validationQueryTimeout" value="1" />
		<!--每30秒运行一次空闲连接回收器-->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
	</bean>

	<!--配置SessionFactory-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mybatis-mapper/*.xml"/>
	</bean>
    <!--SqlSessionTemplate将会保证使用的SqlSession是和当前Spring的事务相关的。
    此外，它管理session的生命周期，包含必要的关闭，提交或回滚操作-->
    <bean id="sqlSessionTemplate"  class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
          <constructor-arg index="0" ref="sqlSessionFactory" />  
    </bean>
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zxl.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!--配置事物-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!--就是支持事务注解的-->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

</beans>